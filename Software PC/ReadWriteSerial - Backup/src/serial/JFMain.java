/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package serial;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;
import com.googlecode.javacv.*;
import com.googlecode.javacv.cpp.opencv_core.IplImage;
import com.sun.j3d.utils.geometry.Box;
import com.sun.j3d.utils.universe.SimpleUniverse;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GraphicsConfiguration;
import java.io.UnsupportedEncodingException;
import javax.media.j3d.Appearance;
import javax.media.j3d.BranchGroup;
import javax.media.j3d.Canvas3D;
import javax.media.j3d.ColoringAttributes;
import javax.media.j3d.PolygonAttributes;
import javax.media.j3d.Transform3D;
import javax.media.j3d.TransformGroup;
import javax.swing.JSlider;

/**
 *
 * @author joaoq
 */
public class JFMain extends javax.swing.JFrame {

    static String newLabelX = "", newLabelY = "", newLabelZ = "", newLabelGarra="0";
    static OpenCVFrameGrabber frameGrabber = new OpenCVFrameGrabber(0);//"rtsp://admin:JPsq11.06@192.168.137.78/onvif1");
    static ClienteMQTT clienteMQTT = new ClienteMQTT("tcp://broker.mqttdashboard.com:1883", "iatrqott", "gW7u8bMQzjOm");
    private static View objeto = new View(0);
    private static Integer y = 0, x = 0, ga = 0;
    private static char aux; 
    public static void setLabel(String newvalue[], byte c[]) throws UnsupportedEncodingException {
//        Character c = newvalue[0].charAt(0);
        aux = (char)c[0];
        x = (int)aux;
        x += (90 - x)*2;
        
        newLabelX = x.toString();
        newLabelY = newvalue[1];
        newLabelZ = newvalue[2];
        aux = (char)c[3];
        ga = ((int)aux);
        newLabelGarra = ga.toString();
        
        y = new Integer(newLabelY);
        y += 180; 
        objeto.rotate(x, 
                        y, 
                        new Integer(newLabelZ));
    }
    TimerToLabel timer_label;

    /**
     * Creates new form JFMain
     */
    public JFMain() {
        initComponents();
        this.timer_label = new TimerToLabel(100, jLX, jLY, jLZ, jLGarra, jSGarra);
        this.timer_label.init_timer();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPMain = new javax.swing.JPanel();
        panelCamera = new CamView();
        jLabel3 = new javax.swing.JLabel();
        panel3D = new javax.swing.JScrollPane(objeto);
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jBExit = new javax.swing.JButton();
        jSGarra = new javax.swing.JSlider();
        jLX = new javax.swing.JLabel();
        jLY = new javax.swing.JLabel();
        jLZ = new javax.swing.JLabel();
        jLGarra = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 600));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPMain.setBackground(java.awt.SystemColor.textInactiveText);
        jPMain.setMaximumSize(new java.awt.Dimension(1366, 768));
        jPMain.setPreferredSize(new java.awt.Dimension(1366, 720));

        panelCamera.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelCamera.setMinimumSize(new java.awt.Dimension(400, 250));
        panelCamera.setPreferredSize(new java.awt.Dimension(1024, 720));
        panelCamera.setLayout(new java.awt.BorderLayout());

        jLabel3.setText("Ambiente remoto:");

        panel3D.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        panel3D.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        panel3D.setMaximumSize(new java.awt.Dimension(600, 600));
        panel3D.setMinimumSize(new java.awt.Dimension(282, 282));
        panel3D.setPreferredSize(new java.awt.Dimension(282, 282));

        jLabel4.setText("Movimentação:");

        jBExit.setText("Sair");
        jBExit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBExitMouseClicked(evt);
            }
        });
        jBExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(225, Short.MAX_VALUE)
                .addComponent(jBExit)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSGarra, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSGarra, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jBExit)
                .addContainerGap())
        );

        jLX.setText("jLabel2");

        jLY.setText("jLabel2");

        jLZ.setText("jLabel4");

        jLGarra.setText("jLabel1");

        javax.swing.GroupLayout jPMainLayout = new javax.swing.GroupLayout(jPMain);
        jPMain.setLayout(jPMainLayout);
        jPMainLayout.setHorizontalGroup(
            jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelCamera, javax.swing.GroupLayout.DEFAULT_SIZE, 1054, Short.MAX_VALUE)
                    .addGroup(jPMainLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLX)
                        .addComponent(panel3D, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLY)
                        .addComponent(jLZ)
                        .addComponent(jLGarra)))
                .addContainerGap())
        );
        jPMainLayout.setVerticalGroup(
            jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPMainLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPMainLayout.createSequentialGroup()
                        .addComponent(panel3D, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jLX)
                        .addGap(27, 27, 27)
                        .addComponent(jLY)
                        .addGap(18, 18, 18)
                        .addComponent(jLZ)
                        .addGap(18, 18, 18)
                        .addComponent(jLGarra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelCamera, javax.swing.GroupLayout.DEFAULT_SIZE, 666, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPMain, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        try {
            frameGrabber.stop();
        } catch (Exception e) {
            e.printStackTrace();
        }
        System.exit(1);
    }//GEN-LAST:event_formWindowClosed

    private void jBExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBExitActionPerformed

    private void jBExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBExitMouseClicked
        clienteMQTT.finalizar();
        try {
            frameGrabber.stop();
        } catch (Exception e) {
            e.printStackTrace();
        }
        System.exit(1);
    }//GEN-LAST:event_jBExitMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        frameGrabber.setFormat("mjpeg");
        frameGrabber.start();

        IplImage iPimg = frameGrabber.grab();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFMain().setVisible(true);
                new Thread(new CameraHandler(frameGrabber, (CamView) panelCamera)).start();

            }
        });

        clienteMQTT.iniciar();

        new Ouvinte(clienteMQTT, "b_1jpsq", 0);
    }

    private class TimerToLabel implements ActionListener {

        private Timer timer;
        private final JLabel labelx, labely, labelz, labelgarra;
        private final JSlider sliderGarra;
        private final int delay;

        public TimerToLabel(final int delay, final JLabel labelX, final JLabel labelY, final JLabel labelZ, final JLabel labelGarra, final JSlider garra) {
            this.delay = delay;
            this.labelx = labelX;
            this.labely = labelY;
            this.labelz = labelZ;
            this.labelgarra = labelGarra;
            this.sliderGarra = garra;
        }

        public void init_timer() {
            timer = new Timer(delay, this);
            timer.start();
        }

        public void actionPerformed(final ActionEvent e) {
            // faça aqui sua consulta
            labelx.setText(newLabelX);
            labely.setText(newLabelY);
            labelz.setText(newLabelZ);
            labelgarra.setText(newLabelGarra);
            sliderGarra.setValue(new Integer(newLabelGarra));
            labelx.updateUI();
            labely.updateUI();
            labelz.updateUI();
            labelgarra.updateUI();
            sliderGarra.updateUI();
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBExit;
    private javax.swing.JLabel jLGarra;
    private static javax.swing.JLabel jLX;
    private javax.swing.JLabel jLY;
    private javax.swing.JLabel jLZ;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPMain;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSlider jSGarra;
    private static javax.swing.JScrollPane panel3D;
    private static javax.swing.JPanel panelCamera;
    // End of variables declaration//GEN-END:variables
}

class CamView extends JPanel {

    private BufferedImage image;

    public CamView() {
        super();
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2 = (Graphics2D) g;
        if (image != null) {
            g2.drawImage(image, 0, 0, this.getWidth(), this.getHeight(), this);
        }
    }

    public void refresh(BufferedImage image) {
        this.image = image;
        this.repaint();
    }

}

class View extends JPanel {

    private Transform3D rotate1 = new Transform3D();
    private Transform3D rotate2 = new Transform3D();
    private Transform3D rotate3 = new Transform3D();
    private BranchGroup objRoot = new BranchGroup();
    private TransformGroup rotator;
    int s = 0, count = 0;

    public View(int x) {
        setLayout(new BorderLayout());
        setMaximumSize(new Dimension(600, 600));
        setMinimumSize(new Dimension(100, 100));
        setPreferredSize(new Dimension(300, 300));
        GraphicsConfiguration gc = SimpleUniverse.getPreferredConfiguration();
        Canvas3D canvas3D = new Canvas3D(gc);
        add("Center", canvas3D);

        BranchGroup scene = createSceneGraph(x);
        scene.compile();

        // SimpleUniverse is a Convenience Utility class
        SimpleUniverse simpleU = new SimpleUniverse(canvas3D);

        // This moves the ViewPlatform back a bit so the
        // objects in the scene can be viewed.
        simpleU.getViewingPlatform().setNominalViewingTransform();

        simpleU.addBranchGraph(scene);
    }

    public BranchGroup createSceneGraph(int x) {
        rotator = new TransformGroup(rotateCube(x));
        objRoot.addChild(rotator);
        Appearance appearance = new Appearance();
        appearance.setColoringAttributes(new ColoringAttributes(0.2f, 0.2f, 0.4f, 1));
        PolygonAttributes pa = new PolygonAttributes();
        pa.setPolygonMode(2);
        appearance.setPolygonAttributes(pa);
        rotator.addChild(new Box(0.3f, 0.1f, 0.3f, appearance));
        rotator.setCapability(TransformGroup.ALLOW_TRANSFORM_WRITE);

        return objRoot;
    }

    public Transform3D rotateCube(int degX) {
        rotate1.rotX(degX * Math.PI / 180.0d);
        rotate2.rotY(Math.PI / 6.0d);
        rotate3.rotZ(0);
        rotate1.mul(rotate2);
        //rotate1.mul(rotate3);
        return rotate1;
    }

    public void rotate(long x, long y, long z) {
        rotate1.rotX(Math.toRadians(x-90));
        rotate2.rotY(Math.toRadians(z-90));
        rotate3.rotZ(Math.toRadians(y-90));
        rotate1.mul(rotate2);
        rotate1.mul(rotate3);
        rotator.setTransform(rotate1);
    }

}
